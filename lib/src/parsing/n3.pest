Iri = @{ IriScheme ~ ":" ~ IriHierPart ~ ("?" ~ IriQuery)? ~ ("#" ~ IriFragment)? }

// NB(@althonos): IriPathAbEmpty is not mandatory if we reach the end of input
//                here to allow URLs to hosts without trailing slashes, e.g.
///               'http://example.com', which would be rejected otherwise.
IriHierPart = {
    ("//" ~ IriAuthority ~ (IriPathAbempty | EOI) )
  | IriPathAbsolute
  | IriPathRootless
  | IriPathEmpty
}

IriAuthority = ${ (IriUserInfo ~ "@")? ~ IriHost ~ (":" ~ IriPort)?}
IriUserInfo  = ${ (IriUnreserved | IriPctEncoded | IriSubDelims | ":")* }
IriHost      = ${ IriIpLiteral | IriIpv4Address | IriRegName }
IriRegName   = ${ (IriUnreserved | IriPctEncoded | IriSubDelims)* }

IriPath         = ${IriPathAbempty | IriPathAbsolute | IriPathNoScheme | IriPathRootless | IriPathEmpty}
IriPathAbempty  = ${ ("/" ~ IriSegment)+ }
IriPathAbsolute = ${ "/" ~ (IriSegmentNz ~ ("/" ~ IriSegment)* )? }
IriPathNoScheme = ${ IriSegmentNzNc ~ ("/" ~ IriSegment)* }
IriPathRootless = ${ IriSegmentNz ~ ("/" ~ IriSegment)* }
IriPathEmpty    = ${ "" }

IriSegment     = @{ IriIpChar* }
IriSegmentNz   = @{ IriIpChar+ }
IriSegmentNzNc = @{ (IriUnreserved | IriPctEncoded | IriSubDelims | "@")+ }

IriQuery    = @{ (IriIpChar | IriPrivate | "/" | "?")* }
IriFragment = @{ (IriIpChar | "/" | "?")* }

IriScheme     = @{ ASCII_ALPHA ~ (ASCII_ALPHA | ASCII_DIGIT | "+" | "-" | ".")* }
IriPort       = @{ ASCII_DIGIT* }

IriPrivate    = ${ '\u{E000}'..'\u{F8FF}' | '\u{F0000}'..'\u{FFFFD}' | '\u{100000}'..'\u{10FFFD}' }
IriPctEncoded = ${ "%" ~ ASCII_HEX_DIGIT ~ ASCII_HEX_DIGIT }
IriUnreserved = @{ ("\\" ~ IriReserved) | ASCII_ALPHA | ASCII_DIGIT | "-" | "." | "_" | "~" }
IriReserved   = @{ IriGenDelims | IriSubDelims }
IriGenDelims  = @{":" | "/" | "?" | "#" | "[" | "]" | "@"}
IriSubDelims  = @{"!" | "$" | "&" | "'" | "(" | ")" | "*" | "+" | "," | ";" | "="}
IriDecOctet   = ${
    ASCII_DIGIT
  | (('1' .. '9') ~ ASCII_DIGIT)
  | ("1" ~ ASCII_DIGIT ~ ASCII_DIGIT)
  | ("2" ~ ('0' .. '4') ~ ASCII_DIGIT)
  | ("25" ~ ('0' .. '5'))
}

IriIpChar = { IriUnreserved | IriPctEncoded | IriSubDelims | ":" | "@" }
IriIpLiteral = { "[" ~ (IriIpv6Address ~ IriIpvFutureAddress)* ~ "]" }

IriIpv6H16  = ${ ASCII_HEX_DIGIT{1,4} }
IriIpv6Ls32 = { (IriIpv6H16 ~ ":" ~ IriIpv6H16) | IriIpv4Address }

IriIpv4Address      = ${ IriDecOctet ~ "." ~ IriDecOctet ~ "." ~ IriDecOctet ~ "." ~ IriDecOctet }
IriIpvFutureAddress = ${ "v" ~ ASCII_HEX_DIGIT+ ~ "." ~ (IriUnreserved | IriSubDelims | ":")+ }
IriIpv6Address      = ${
    ( (IriIpv6H16 ~ ":"){6} ~ IriIpv6Ls32 )
  | ( "::" ~ (IriIpv6H16 ~ ":"){5} ~ IriIpv6Ls32 )
  | ( IriIpv6H16? ~ "::" ~ (IriIpv6H16 ~ ":"){4} ~ IriIpv6Ls32 )
  | ( ((IriIpv6H16 ~ ":"){1} ~ IriIpv6H16)? ~ "::" ~ (IriIpv6H16 ~ ":"){3} ~ IriIpv6Ls32)
  | ( ((IriIpv6H16 ~ ":"){2} ~ IriIpv6H16)? ~ "::" ~ (IriIpv6H16 ~ ":"){2} ~ IriIpv6Ls32)
  | ( ((IriIpv6H16 ~ ":"){3} ~ IriIpv6H16)? ~ "::" ~ IriIpv6H16 ~ ":" ~ IriIpv6Ls32)
  | ( ((IriIpv6H16 ~ ":"){4} ~ IriIpv6H16)? ~ "::" ~ IriIpv6Ls32)
  | ( ((IriIpv6H16 ~ ":"){5} ~ IriIpv6H16)? ~ "::" ~ IriIpv6H16)
  | ( ((IriIpv6H16 ~ ":"){6} ~ IriIpv6H16)? ~ "::")
}


// N3 rule
//WHITESPACE = _{ " " | "\t" | "\r" | "\n" }
WS = { " " | "\t" | "\r" | "\n" }
SPACE = { " " | "\t"}
NewLine = { "\r" | "\n" }
Var = {"?"~ASCII_ALPHA+~ASCII_ALPHANUMERIC*}
Prefix = {"@prefix"~SPACE+~PrefixIdentifier~":"~SPACE+~"<"~Iri~">"~WS* ~"."~WS*}
PrefixIdentifier = {ASCII_ALPHANUMERIC*}
LocalNameChar = {ASCII_ALPHANUMERIC | "_"}
Prefixed = {PrefixIdentifier ~":"~LocalNameChar+}
Term = {"<"~Iri~">" | Prefixed}
varOrTerm = { Term | Var}
Subject = { Term | Var}
Property = { Term | Var}
Object = { Term | Var}
TP = { WS*~Subject ~WS+~ Property ~WS+~ Object ~WS* ~"."? ~WS* }
Body = {"{"~TP+~"}"}
Head = {"{"~WS*~TP~WS*~"}"}
rule = { Body~WS*~"=>"~WS*~Head~WS*~"."? ~WS*}
document = {Prefix* ~ NewLine* ~rule+}
